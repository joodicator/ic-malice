^
~
<
<=
==
>
>=
|
||
-
,
:
!
!=
!(
?
?.
/
.
'
" = "
" "
",
","
") = "
").
"] = "
"{"
(
(~
(~(
("
((
(((
()
().
)
)/
).
))
)).
)))
)))).
$
*
\
&
&&
###
%
+
0
1
10
100
1000
10000
101
12
13
15
16
17
2
20
200
22
3
30
32749
4
40
42
49
5
50
500
6
60
7
70
75
8
80
81
9
90
97
98
99
a
'a'
abs
ackermann
"ackermann("
"After sorting, the array is: "
Alice
and
andy
answer
Apple
are
arr
"arr["
"array element "
"***Array handling***\n"
"Array in reverse\n"
arrLen
arrSize
ate
'b'
Banana
became
because
"Before sorting, the array is: "
binarySearch
bubbleSort
but
c
Cat
charArray
"Choose an array size"
"Choose an element to print in the range 0.."
"Choose a size > 0"
"Chosen element out of range"
closed
compare
compute
contained
cross
crossProduct
Dog
dot
dotProduct
"Do you want to enter a value for each array element? (0 == no, 1 == yes)"
drank
'e'
either
elem
" elements\n"
enough
"Enter a number"
"Enter element "
"Enter the first number"
"Enter the second number"
equal
eventually
fib0
fib1
"Fib number "
fibonacci
findPrimes
found
"Found "
func
func1
func2
func3
Function
gcd
"gcd("
had
hatta
he
high
"How many elements are there in the array to be sorted?"
i
i-1
" in array\n"
index
initialise
initialise2
" is "
" is biggest\n"
" is NOT prime\n"
" is prime\n"
isSet
j
key
labs
letter
lim
limit
linus
looking-glass
low
main
MAlice
maybe
message
mid
n
"}\n"
"\n"
" natural numbers"
"\nThe dot product of vectors 1 and 2 is "
"\nThe dot product of vectors 1 and 3 is "
"\nThe dot product of vectors 2 and 3 is "
number
Number
numbere
of
opened
or
Orange
other
output
perhaps
piece
" piece to "
"Please enter a number: "
"Please enter a number for x"
"Please enter a number for y"
Potato
" primes in the first "
print
printElement
proc
Procedure
product
randA
random
reduction
result
room
s
said
search
sentence
"Setting arr's "
's i piece became vec1'
's i piece * vec2'
's j-1 piece > arr'
's j - 1 piece became arr'
so
something
something_else
spider
spoke
startIndex
startNum
"Summing the elements of the array gives "
temp
The
"The array has "
"The array size is too large"
then
there
"There are "
this
times
to
toFind
too
total
"Unable to find "
unequal
unsure
Values
vec
vec1
vec2
vec3
vecLen
vector
vectors
was
what
which
"Which term in the Fibonacci sequence shall I compute?"
x
x-2
"x's fourth bit is NOT set"
"x's fourth bit is set"
y
z
'z'
